package ru.ibs.dtm.query.execution.core.factory;import lombok.val;import org.jetbrains.annotations.NotNull;import ru.ibs.dtm.common.status.PublishStatusEventRequest;import ru.ibs.dtm.common.status.StatusEventKey;import java.time.LocalDateTime;import java.util.UUID;public abstract class AbstractStatusEventFactory<IN, OUT> implements StatusEventFactory<OUT> {    protected abstract OUT createEventMessage(StatusEventKey eventKey, IN eventData);    @Override    @SuppressWarnings("unchecked")    public PublishStatusEventRequest<OUT> create(String datamart, Object eventData) {        val eventKey = getEventKey(datamart);        return new PublishStatusEventRequest<>(eventKey, createEventMessage(eventKey, (IN) eventData));    }    @NotNull    private StatusEventKey getEventKey(String datamart) {        return new StatusEventKey(datamart, LocalDateTime.now(), getEventCode(), UUID.randomUUID());    }}